# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v2
      with:
        path:  build/cache
        key: ${{ runner.os }}-modules-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-modules-
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - run: |
        sudo apt-get install qemu-user-static -y 
        mkdir -p build/cache 
        docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
        docker buildx build \
          --platform linux/arm/v7 \
          --cache-to=type=local,dest=build/cache \
          --cache-from=type=local,src=build/cache \
          --progress plain \
          -t ${{ secrets.REGISTRY_USERNAME }}/clipper:${{ github.sha }} \
          --push .
        docker images
    
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig:  ${{ secrets.KUBECONFIG }}
      id: setcontext

    - uses: azure/setup-helm@v1
      with:
        version: 'v3.0.2' # default is latest stable
      id: install

    - run: |
        helm delete clipper
        helm install --set image.repository="${{ secrets.REGISTRY_USERNAME }}/clipper" --set image.version="${{ github.sha }}" clipper deploy
